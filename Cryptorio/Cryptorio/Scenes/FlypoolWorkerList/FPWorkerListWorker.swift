//
//  FPWorkerListWorker.swift
//  Cryptorio
//
//  Created by Anak Mirasing on 7/14/17.
//  Copyright (c) 2017 iGROOMGRiM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

class FPWorkerListWorker {
  let disposeBag = DisposeBag()
  
  func fetchWorkers(walletID: String, completion: @escaping ([FPHTMLWorker]?) -> Void) {
    let client = APIClient()
    let endpoint = APIEndpoint<FPHTMLWorker>(endpoint: FPEndpoint.worker, walletID: walletID)
    let callWorkerData = ServiceCall.init(endpoint: endpoint, client: client)
    
    callWorkerData.subscribe(onNext: { (result) in
      guard let value = result.value() as? Data else {
        DispatchQueue.main.async {
          completion(nil)
        }
        
        return
      }
      
      let workersData = endpoint.deserialize(value).1
      guard let workers = workersData else {
        DispatchQueue.main.async {
          completion(nil)
        }
        
        return
      }
      
      DispatchQueue.main.async {
        completion(workers)
      }
      
    }, onError: { (err) in
      DispatchQueue.main.async {
        completion(nil)
      }
    }, onCompleted: nil, onDisposed: nil)
      .addDisposableTo(disposeBag)
  }
  
  func fetchWalletID() -> String? {
    return WalletIDStore.getWalletID(from: .flypool)
  }
}
