//
//  FPPayoutListViewController.swift
//  Cryptorio
//
//  Created by Anak Mirasing on 7/15/2560 BE.
//  Copyright (c) 2560 iGROOMGRiM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FPPayoutListDisplayLogic: class {
  func displayPayoutList(viewModel: FPPayoutList.GetPayouts.ViewModel)
}

class FPPayoutListViewController: UITableViewController, FPPayoutListDisplayLogic {
  var interactor: FPPayoutListBusinessLogic?
  var router: (NSObjectProtocol & FPPayoutListRoutingLogic & FPPayoutListDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = FPPayoutListInteractor()
    let presenter = FPPayoutListPresenter()
    let router = FPPayoutListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    fetchPayouts()
  }
    
  func fetchPayouts() {
    let request = FPPayoutList.FetchPayouts.Request()
    interactor?.fetchPayouts(request: request)
    print("fetchPayouts")
  }
  
  func displayPayoutList(viewModel: FPPayoutList.GetPayouts.ViewModel) {
    print("displayPayoutList")
    print(viewModel)
    //nameTextField.text = viewModel.name
  }
}
