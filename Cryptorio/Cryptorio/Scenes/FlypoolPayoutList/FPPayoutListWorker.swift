//
//  FPPayoutListWorker.swift
//  Cryptorio
//
//  Created by Anak Mirasing on 7/15/2560 BE.
//  Copyright (c) 2560 iGROOMGRiM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

class FPPayoutListWorker {
  let disposeBag = DisposeBag()
  
  func fetchPayouts(walletID: String, completion: @escaping ([FPHTMLPayout]?) -> Void) {
    let client = APIClient()
    let endpoint = APIEndpoint<FPHTMLPayout>(endpoint: FPEndpoint.payout, walletID: walletID)
    let callPayoutData = ServiceCall.init(endpoint: endpoint, client: client)
    
    callPayoutData.subscribe(onNext: { (result) in
      guard let value = result.value() as? Data else {
        DispatchQueue.main.async {
          completion(nil)
        }
        
        return
      }
      
      let payoutsData = endpoint.deserialize(value).1
      guard let payouts = payoutsData else {
        DispatchQueue.main.async {
          completion(nil)
        }
        
        return
      }
      
      DispatchQueue.main.async {
        completion(payouts)
      }
      
    }, onError: { (err) in
      DispatchQueue.main.async {
        completion(nil)
      }
    }, onCompleted: nil, onDisposed: nil)
      .addDisposableTo(disposeBag)
  }
  
  func fetchWalletID() -> String? {
    return WalletIDStore.getWalletID(from: .flypool)
  }
}
