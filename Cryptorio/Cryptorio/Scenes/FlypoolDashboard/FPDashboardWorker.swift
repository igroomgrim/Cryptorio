//
//  FPDashboardWorker.swift
//  Cryptorio
//
//  Created by Anak Mirasing on 7/11/2560 BE.
//  Copyright (c) 2560 iGROOMGRiM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum FPResult<U> {
  case Success(result: U)
  case Failure(error: FPError)
}

enum FPError: Error {
  case CannotFetch(String)
}

class FPDashboardWorker {
  let defaultSession = URLSession(configuration: .default)
  var dataTask: URLSessionDataTask?
  let walletIDStore = WalletIDStore()
  
  func fetchAPIData(walletID: String, completion: @escaping (FPResult<FPData>) -> Void) {
    if var urlComponents = URLComponents(string: "http://zcash.flypool.org/api/miner_new/\(walletID)") {
      guard let url = urlComponents.url else { return }
      
      dataTask = defaultSession.dataTask(with: url) { data, response, error in
        defer { self.dataTask = nil }
        
        if let error = error {
          let fpError = FPError.CannotFetch(error.localizedDescription)
          let errorResult = FPResult<FPData>.Failure(error: fpError)
          DispatchQueue.main.async {
            completion(errorResult)
          }
          
        } else if let data = data,
          let response = response as? HTTPURLResponse,
          response.statusCode == 200 {
          
          guard let fpData = FPData(data: data) else {
            let error = FPError.CannotFetch("Can't fetch data from Flypool API")
            let errorResult = FPResult<FPData>.Failure(error: error)
            DispatchQueue.main.async {
              completion(errorResult)
            }
            return
          }

          let result = FPResult.Success(result: fpData)
          DispatchQueue.main.async {
            completion(result)
          }
        }
      }
      
      dataTask?.resume()
    }
  }
  
  func fetchWalletID() -> String? {
    return walletIDStore.getWalletID(from: .flypool)
  }
}
